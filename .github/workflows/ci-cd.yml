name: CI/CD Pipeline with Email

on:
  push:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build app
        run: |
          if npm run | grep -q "build"; then
            npm run build
          else
            echo "‚ö†Ô∏è No build script defined in package.json"
          fi

      - name: Trigger Render Deployment
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          echo "üöÄ Triggering Render deployment..."
          curl -s -X POST "$RENDER_DEPLOY_HOOK"

      - name: Trigger and Monitor Render Deployment
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          echo "üöÄ Triggering Render deployment..."
          curl -s -X POST "$RENDER_DEPLOY_HOOK"

          echo "‚è≥ Waiting for deployment to start..."

          for i in {1..30}; do
            RESPONSE=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$SERVICE_ID/deploys")

            DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.[0].deploy.id')
            STATUS=$(echo "$RESPONSE" | jq -r '.[0].deploy.status')

            echo "Attempt $i - Deploy ID: $DEPLOY_ID - Status: $STATUS"

            if [[ "$STATUS" == "live" ]]; then
              echo "‚úÖ Deployment successful!"
              break
            elif [[ "$STATUS" == "failed" ]]; then
              echo "‚ùå Deployment failed!"
              break
            fi

            sleep 10
          done
          

      - name: Send Email Notification
        if: success() && steps.build-test-deploy.outputs.success != 'false'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚úÖ Deployment Complete: Node.js App"
          to: sandeeppatali683@gmail.com
          from: "GitHub Actions <${{ secrets.EMAIL_USERNAME }}>"
          body: |
            üöÄ Hello Mahesh!

            Your Node.js application has been successfully deployed to Render.

            üîó Live URL: https://node-cicd-q6g2.onrender.com/